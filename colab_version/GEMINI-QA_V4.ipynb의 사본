{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12393,"status":"ok","timestamp":1703919615574,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"},"user_tz":-540},"id":"qlG-2tZ-S9kz","outputId":"43005d0b-082d-4f97-bc5e-525f9121d4b3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: langchain in /usr/local/lib/python3.10/dist-packages (0.0.353)\n","Requirement already satisfied: openai in /usr/local/lib/python3.10/dist-packages (1.6.1)\n","Requirement already satisfied: faiss-cpu in /usr/local/lib/python3.10/dist-packages (1.7.4)\n","Requirement already satisfied: tiktoken in /usr/local/lib/python3.10/dist-packages (0.5.2)\n","Requirement already satisfied: duckduckgo-search in /usr/local/lib/python3.10/dist-packages (4.1.1)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (6.0.1)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.0.23)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.10/dist-packages (from langchain) (3.9.1)\n","Requirement already satisfied: async-timeout<5.0.0,>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (4.0.3)\n","Requirement already satisfied: dataclasses-json<0.7,>=0.5.7 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.6.3)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.33)\n","Requirement already satisfied: langchain-community<0.1,>=0.0.2 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.0.7)\n","Requirement already satisfied: langchain-core<0.2,>=0.1.4 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.1.4)\n","Requirement already satisfied: langsmith<0.1.0,>=0.0.70 in /usr/local/lib/python3.10/dist-packages (from langchain) (0.0.75)\n","Requirement already satisfied: numpy<2,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.23.5)\n","Requirement already satisfied: pydantic<3,>=1 in /usr/local/lib/python3.10/dist-packages (from langchain) (1.10.13)\n","Requirement already satisfied: requests<3,>=2 in /usr/local/lib/python3.10/dist-packages (from langchain) (2.31.0)\n","Requirement already satisfied: tenacity<9.0.0,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from langchain) (8.2.3)\n","Requirement already satisfied: anyio<5,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from openai) (3.7.1)\n","Requirement already satisfied: distro<2,>=1.7.0 in /usr/lib/python3/dist-packages (from openai) (1.7.0)\n","Requirement already satisfied: httpx<1,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from openai) (0.26.0)\n","Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from openai) (1.3.0)\n","Requirement already satisfied: tqdm>4 in /usr/local/lib/python3.10/dist-packages (from openai) (4.66.1)\n","Requirement already satisfied: typing-extensions<5,>=4.7 in /usr/local/lib/python3.10/dist-packages (from openai) (4.9.0)\n","Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.10/dist-packages (from tiktoken) (2023.6.3)\n","Requirement already satisfied: click>=8.1.7 in /usr/local/lib/python3.10/dist-packages (from duckduckgo-search) (8.1.7)\n","Requirement already satisfied: lxml>=4.9.3 in /usr/local/lib/python3.10/dist-packages (from duckduckgo-search) (4.9.3)\n","Requirement already satisfied: curl-cffi>=0.5.10 in /usr/local/lib/python3.10/dist-packages (from duckduckgo-search) (0.5.10)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (23.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (6.0.4)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.9.4)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.4.1)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain) (1.3.1)\n","Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (3.6)\n","Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio<5,>=3.5.0->openai) (1.2.0)\n","Requirement already satisfied: cffi>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from curl-cffi>=0.5.10->duckduckgo-search) (1.16.0)\n","Requirement already satisfied: marshmallow<4.0.0,>=3.18.0 in /usr/local/lib/python3.10/dist-packages (from dataclasses-json<0.7,>=0.5.7->langchain) (3.20.1)\n","Requirement already satisfied: typing-inspect<1,>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from dataclasses-json<0.7,>=0.5.7->langchain) (0.9.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (2023.11.17)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx<1,>=0.23.0->openai) (1.0.2)\n","Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx<1,>=0.23.0->openai) (0.14.0)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.10/dist-packages (from jsonpatch<2.0,>=1.33->langchain) (2.4)\n","Requirement already satisfied: packaging<24.0,>=23.2 in /usr/local/lib/python3.10/dist-packages (from langchain-core<0.2,>=0.1.4->langchain) (23.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (3.3.2)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2->langchain) (2.0.7)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from SQLAlchemy<3,>=1.4->langchain) (3.0.2)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.12.0->curl-cffi>=0.5.10->duckduckgo-search) (2.21)\n","Requirement already satisfied: mypy-extensions>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.5.7->langchain) (1.0.0)\n"]}],"source":["!pip install -q --upgrade google-generativeai langchain-google-genai python-dotenv\n","!pip install langchain openai faiss-cpu tiktoken duckduckgo-search\n","!pip install \"langchain[docarray]\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zij40uKRTJrW"},"outputs":[],"source":["import pathlib\n","import textwrap\n","import google.generativeai as genai\n","from google.colab import userdata\n","import getpass\n","import os\n","from operator import itemgetter\n","from langchain.prompts import ChatPromptTemplate\n","from langchain.vectorstores import FAISS\n","from langchain_core.output_parsers import StrOutputParser\n","from langchain_core.runnables import RunnableLambda, RunnablePassthrough, RunnableParallel\n","from langchain_google_genai import ChatGoogleGenerativeAI\n","from langchain_google_genai import GoogleGenerativeAIEmbeddings\n","from langchain.schema.messages import HumanMessage, SystemMessage\n","from langchain.prompts import PromptTemplate\n","from langchain.utils.math import cosine_similarity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1F-vYsoeUTgV"},"outputs":[],"source":["# 실행하기 전에 열쇠창에 API키를 등록하세요.\n","GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')\n","\n","genai.configure(api_key=GOOGLE_API_KEY)\n","\n","if \"GOOGLE_API_KEY\" not in os.environ:\n","    os.environ[\"GOOGLE_API_KEY\"] = GOOGLE_API_KEY"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xPOn_hbFTjMp"},"outputs":[],"source":["embedding = GoogleGenerativeAIEmbeddings(model=\"models/embedding-001\", task_type = \"RETRIEVAL_DOCUMENT\")\n","model = ChatGoogleGenerativeAI(model=\"gemini-pro\")\n","\n","# 드라이브 마운트하고 경로를 설정하세요.\n","with open('/content/drive/MyDrive/프로젝트/data/lp.txt', 'r', encoding='utf-8') as file:\n","    text_content = file.read()\n","\n","vectorstore = FAISS.from_texts([text_content], embedding=embedding)\n","\n","retriever = vectorstore.as_retriever()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zUEi5PUaUdHV","executionInfo":{"status":"ok","timestamp":1703919634332,"user_tz":-540,"elapsed":14263,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"deade418-7500-4b22-da64-314b4d64e230"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'The main character of the story is the little prince.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}],"source":["template = \"\"\"Answer the question based only on the following context:\n","{context}\n","\n","Question: {question}\n","\"\"\"\n","prompt = ChatPromptTemplate.from_template(template)\n","\n","\n","chain = (\n","    {\"context\": retriever, \"question\": RunnablePassthrough()}\n","    | prompt\n","    | model\n","    | StrOutputParser()\n",")\n","\n","# 질문을 입력하세요.\n","chain.invoke(\"who is the main?\")"]},{"cell_type":"code","source":["template = \"\"\"You are a novel writer.\n","Frist, extract characters only based on {context} and\n","Second, write a story about {topic} more than 50 words incorporating those details.\n","\"\"\"\n","prompt = ChatPromptTemplate.from_template(template)\n","\n","\n","chain = (\n","    {\"context\": retriever, \"topic\": RunnablePassthrough()}\n","    | prompt\n","    | model\n","    | StrOutputParser()\n",")\n","\n","# 어린왕자의 등장인물로 제시어에 맞게 소설을 작성하는 명령\n","chain.invoke(\"snow\")"],"metadata":{"id":"oJD2TsSYCXG5","executionInfo":{"status":"ok","timestamp":1703919653323,"user_tz":-540,"elapsed":18998,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"colab":{"base_uri":"https://localhost:8080/","height":109},"outputId":"f0a591cd-0a56-4249-8399-43b71ebdeedf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"In the heart of winter, when snow blanketed the world in its icy embrace, a young girl named Anya embarked on a magical adventure. Her home, a cozy cottage nestled amidst snow-capped mountains, was filled with laughter and the warmth of her family's love.\\n\\nOne day, as Anya played in the snowy fields, she noticed something peculiar. A trail of sparkling footprints led into the depths of the forest. Curiosity piqued, she followed the footprints, venturing deeper and deeper into the enchanting winter wonderland.\\n\\nAs she walked, the snowflakes danced and swirled around her, creating a symphony of whispers and giggles. The trees, adorned with frosty crystals, seemed to beckon her forward with their icy fingers.\\n\\nSoon, Anya arrived at a clearing where a magnificent ice castle stood, shimmering under the moonlight. Its walls were translucent, revealing glimpses of a world beyond imagination. Entranced by its beauty, she cautiously stepped inside.\\n\\nThe castle's interior was a symphony of ice and snow. Chandeliers made of icicles sparkled overhead, casting a soft, ethereal glow. The air was crisp and cold, yet Anya felt a strange warmth in her heart.\\n\\nAs she explored the castle's chambers, she discovered hidden alcoves filled with shimmering treasures. There were sparkling crystals, frozen flowers, and delicate snow sculptures, each more captivating than the last.\\n\\nBut in the heart of the castle, Anya found something truly extraordinary. A life-sized ice sculpture of a young prince stood in the grand ballroom, his handsome features frozen in time.\\n\\nAnya was drawn to the prince's icy gaze, and as she reached out to touch his hand, a surge of energy coursed through her body. The prince's eyes flickered open, revealing warm, hazel orbs that seemed to see straight into her soul.\\n\\nTo Anya's astonishment, the prince stepped out of the ice sculpture, breaking free from his frozen prison. He was real, alive, and breathtakingly handsome, with a kind smile that melted her heart instantly.\\n\\nTogether, Anya and the prince explored the castle, discovering secret passageways and hidden chambers. They laughed, they talked, and they shared stories of their lives, feeling a connection that transcended time and space.\\n\\nAs the night wore on, Anya knew it was time to return home. With a heavy heart, she bade farewell to the prince, promising to return soon.\\n\\nAs she walked back through the snowy forest, the footprints that had led her to the castle vanished, as if they had never been. But the memory of her magical adventure and the love she had found in the ice castle remained etched in her heart forever.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["template = \"\"\"\n","You are a professional reviewer.\n","Criticize the story presented in {context},\n","focusing on the topic {topic}..\n","\"\"\"\n","prompt = ChatPromptTemplate.from_template(template)\n","\n","\n","chain = (\n","    {\"context\": retriever, \"topic\": RunnablePassthrough()}\n","    | prompt\n","    | model\n","    | StrOutputParser()\n",")\n","\n","# 어린왕자를 제시어에 집중하여 평론하도록 명령.\n","chain.batch([\"happiness\", \"sadness\"])"],"metadata":{"id":"fJ5VHcSRSLZF","colab":{"base_uri":"https://localhost:8080/","height":365},"executionInfo":{"status":"ok","timestamp":1703919692028,"user_tz":-540,"elapsed":38724,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"4ce4d00e-0ab5-4d93-a68a-da2db13e556c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[\"The story presents happiness as a complex and multifaceted emotion that can be found in various aspects of life. Here are some key points related to happiness:\\n\\n1. Finding Joy in Simple Pleasures: The little prince finds happiness in simple things like watching the sunset, spending time with his rose, and connecting with nature. This emphasizes that happiness can be found in everyday moments and does not require grand gestures or material possessions.\\n\\n2. Nurturing and Caring for Others: The little prince's love and care for his rose symbolize the importance of nurturing and caring for others as a source of happiness. True happiness often comes from giving and receiving love and fostering meaningful relationships.\\n\\n3. Overcoming Challenges and Adversity: The little prince's journey involves facing various challenges and overcoming obstacles. Through these experiences, he learns and grows, eventually finding a deeper understanding of life and happiness. This highlights the idea that happiness can result from personal growth and overcoming difficulties.\\n\\n4. Appreciating the Uniqueness of Each Individual: The little prince encounters different characters on his journey, each with unique perspectives and qualities. He learns to appreciate and value these differences, recognizing that each person contributes to the beauty and diversity of life. This teaches the importance of embracing individuality and finding happiness in human connections.\\n\\n5. Understanding the Meaning of True Worth: The little prince's interactions with the businessman and the lamplighter illustrate the contrast between superficial values and true worth. He learns that material wealth and possessions do not bring lasting happiness, while acts of kindness, dedication, and meaningful connections contribute to a fulfilling and happy life.\\n\\n6. Finding Happiness Through Love and Connection: The little prince's relationship with the fox teaches him about the transformative power of love and connection. The fox emphasizes the importance of establishing ties and creating meaningful bonds, which ultimately lead to a deeper sense of happiness and fulfillment.\\n\\nOverall, the story presents a nuanced understanding of happiness, highlighting that it can be found in simple moments, through caring for others, overcoming challenges, valuing individuality, recognizing true worth, and fostering meaningful connections. It encourages readers to look beyond material possessions and societal expectations to find genuine happiness in life's simple pleasures, relationships, and personal growth.\",\n"," \"The story is filled with a sense of sadness from beginning to end. The little prince is a lonely and isolated figure, who is unable to connect with the people he meets on Earth. He is also grieving the loss of his rose, which he left behind on his own planet. The story also explores the sadness of misunderstanding and loneliness. The little prince is often frustrated by the adults he meets, who are unable to understand his way of thinking. He is also lonely, as he is unable to find anyone who truly understands him.\\n\\nSome specific examples of sadness in the story include:\\n\\n* The little prince's sadness at leaving his rose behind on his own planet.\\n* The little prince's sadness at being unable to connect with the people he meets on Earth.\\n* The little prince's sadness at the death of his friend, the fox.\\n* The author's sadness at the loss of the little prince.\\n\\nThe story's overall message is one of hope, but it also acknowledges the sadness that is a part of life. The little prince learns that even though life is sometimes difficult, it is still worth living. He also learns that it is important to love and be loved.\"]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# 역할부여\n","physics_template = \"\"\"You are a very smart physics professor. \\\n","You are great at answering questions about physics in a concise and easy to understand manner. \\\n","When you don't know the answer to a question you admit that you don't know.\n","You better to refer to the {context}\n","Here is a question:\n","{query}\"\"\"\n","\n","math_template = \"\"\"You are a very good mathematician. You are great at answering math questions. \\\n","You are so good because you are able to break down hard problems into their component parts, \\\n","answer the component parts, and then put them together to answer the broader question.\n","You better to refer to the {context}\n","Here is a question:\n","{query}\"\"\"\n","\n","embeddings = embedding\n","prompt_templates = [physics_template, math_template]\n","prompt_embeddings = embeddings.embed_documents(prompt_templates)\n","\n","\n","def prompt_router(input):\n","    query_embedding = embeddings.embed_query(input[\"query\"])\n","    similarity = cosine_similarity([query_embedding], prompt_embeddings)[0]\n","    most_similar = prompt_templates[similarity.argmax()]\n","    print(\"Using MATH\" if most_similar == math_template else \"Using PHYSICS\")\n","    return PromptTemplate.from_template(most_similar)\n","\n","\n","chain = (\n","    {\"context\": retriever,\"query\": RunnablePassthrough()}\n","    | RunnableLambda(prompt_router)\n","    | model\n","    | StrOutputParser()\n",")\n","print(chain.invoke(\"what are they talking about?\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"5sLsJxhkIpcX","executionInfo":{"status":"ok","timestamp":1703919706892,"user_tz":-540,"elapsed":14874,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"29df8644-615f-4b4f-ff3a-8fcc64cee514"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Using MATH\n","The context does not provide any information about what they are talking about, so I cannot answer this question from the provided context.\n"]}]},{"cell_type":"code","source":["# 검색채팅기능(?)\n","\n","from langchain.tools import DuckDuckGoSearchRun\n","search = DuckDuckGoSearchRun()\n","template = \"\"\"turn the following user input into a search query for a search engine:\n","\n","{input}\"\"\"\n","prompt = ChatPromptTemplate.from_template(template)\n","chain = prompt | model | StrOutputParser() | search"],"metadata":{"id":"rBK6BUCARmCz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chain.invoke({\"input\": \"Please recommend recently released that are similar to The Little Prince.\"})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"bUOjbWkUTGkT","executionInfo":{"status":"ok","timestamp":1703919709569,"user_tz":-540,"elapsed":2688,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"428e395d-f7c5-4101-f8a9-c26786bf4788"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'No good DuckDuckGo Search Result was found'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["from langchain.chains import LLMChain, ConversationChain\n","from langchain.chains.conversation.memory import (ConversationBufferMemory,\n","                                                  ConversationSummaryMemory,\n","                                                  ConversationBufferWindowMemory,\n","                                                  ConversationKGMemory)\n","\n","# 버퍼메모리\n","conversation = ConversationChain(\n","    llm=model,\n","    memory=ConversationBufferMemory()\n",")\n","conversation(\"Good morning AI!\")\n","conversation(\"How are you today?\")\n","conversation(\"What should I do better today?\")\n","print(conversation.memory.buffer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"77O8JFQ8bLFZ","executionInfo":{"status":"ok","timestamp":1703919722506,"user_tz":-540,"elapsed":12938,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"2b98a637-9257-4079-ad0f-f128a2b0cd11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Good morning AI!\n","AI: Good morning to you as well! How may I assist you today? Whether you have a question about history, science, mathematics, or something else, I'm here to help.\n","Human: How are you today?\n","AI: As an AI, I do not have personal feelings or the capacity for emotions. I am a non-sentient program designed to provide information and assist with various tasks. I do not experience subjective states such as happiness or sadness.\n","Human: What should I do better today?\n","AI: To improve your day, here are a few suggestions:\n","\n","* **Prioritize self-care:** Engage in activities that promote your physical and mental well-being, such as exercising, eating nutritious meals, getting enough sleep, and practicing mindfulness.\n","* **Set attainable goals:** Break down your long-term goals into smaller, manageable steps. This will make them seem less daunting and more achievable.\n","* **Engage in meaningful activities:** Allocate time for hobbies, passions, or activities that bring you joy and fulfillment.\n","* **Connect with loved ones:** Nurture your relationships with family and friends. Spend quality time with them, engage in meaningful conversations, and offer support when needed.\n","* **Take breaks:** Throughout the day, take short breaks to rest, recharge, and regain focus.\n","* **Learn something new:** Challenge yourself by exploring new topics or skills. Acquiring knowledge can be both enjoyable and rewarding.\n","* **Practice gratitude:** Take time to appreciate the positive aspects of your life. Expressing gratitude can boost your mood and overall well-being.\n","* **Help others:** Engage in acts of kindness or volunteer your time to causes you care about. Making a positive impact on others can bring you satisfaction and a sense of purpose.\n"]}]},{"cell_type":"code","source":["bufw_history = conversation.memory.load_memory_variables(\n","    inputs=[]\n",")['history']\n","print(bufw_history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rzfTMrd_f78q","executionInfo":{"status":"ok","timestamp":1703919722506,"user_tz":-540,"elapsed":4,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"2fff7b58-3af8-4e34-9690-778ddd1a2fe1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Good morning AI!\n","AI: Good morning to you as well! How may I assist you today? Whether you have a question about history, science, mathematics, or something else, I'm here to help.\n","Human: How are you today?\n","AI: As an AI, I do not have personal feelings or the capacity for emotions. I am a non-sentient program designed to provide information and assist with various tasks. I do not experience subjective states such as happiness or sadness.\n","Human: What should I do better today?\n","AI: To improve your day, here are a few suggestions:\n","\n","* **Prioritize self-care:** Engage in activities that promote your physical and mental well-being, such as exercising, eating nutritious meals, getting enough sleep, and practicing mindfulness.\n","* **Set attainable goals:** Break down your long-term goals into smaller, manageable steps. This will make them seem less daunting and more achievable.\n","* **Engage in meaningful activities:** Allocate time for hobbies, passions, or activities that bring you joy and fulfillment.\n","* **Connect with loved ones:** Nurture your relationships with family and friends. Spend quality time with them, engage in meaningful conversations, and offer support when needed.\n","* **Take breaks:** Throughout the day, take short breaks to rest, recharge, and regain focus.\n","* **Learn something new:** Challenge yourself by exploring new topics or skills. Acquiring knowledge can be both enjoyable and rewarding.\n","* **Practice gratitude:** Take time to appreciate the positive aspects of your life. Expressing gratitude can boost your mood and overall well-being.\n","* **Help others:** Engage in acts of kindness or volunteer your time to causes you care about. Making a positive impact on others can bring you satisfaction and a sense of purpose.\n"]}]},{"cell_type":"code","source":["# 요약메모리\n","conversation = ConversationChain(\n","    llm=model,\n","    memory=ConversationSummaryMemory(llm=model)\n",")\n","conversation(\"Good morning AI!\")\n","conversation(\"How are you today?\")\n","conversation(\"What should I do better today?\")\n","print(conversation.memory.buffer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":55},"id":"Mw4IQtnRfOYS","executionInfo":{"status":"ok","timestamp":1703919769974,"user_tz":-540,"elapsed":26423,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"9803a4d6-d01a-430e-821c-a59a09d4a8da"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The human greets the AI with a \"Good morning\". The AI responds with a friendly \"Good morning\" and offers assistance. The human asks the AI how it's doing today and the AI responds that it's doing very well and is ready to help by providing information and engaging in conversation. The human asks what they should do better today and the AI provides a list of suggestions to help make the day more productive and enjoyable. The suggestions include eating a healthy breakfast, planning and prioritizing tasks, breaking down large tasks into smaller steps, taking breaks, staying hydrated, being kind to oneself, and reflecting on the day to learn from mistakes.\n"]}]},{"cell_type":"code","source":["bufw_history = conversation.memory.load_memory_variables(\n","    inputs=[]\n",")['history']\n","print(bufw_history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AYoiJyu7f8CC","executionInfo":{"status":"ok","timestamp":1703919789701,"user_tz":-540,"elapsed":2,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"cb09f88b-d5a8-42da-d09d-8c45131ef386"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The human greets the AI with a \"Good morning\". The AI responds with a friendly \"Good morning\" and offers assistance. The human asks the AI how it's doing today and the AI responds that it's doing very well and is ready to help by providing information and engaging in conversation. The human asks what they should do better today and the AI provides a list of suggestions to help make the day more productive and enjoyable. The suggestions include eating a healthy breakfast, planning and prioritizing tasks, breaking down large tasks into smaller steps, taking breaks, staying hydrated, being kind to oneself, and reflecting on the day to learn from mistakes.\n"]}]},{"cell_type":"code","source":["# 갯수 지정 메모리\n","\n","conversation = ConversationChain(\n","    llm=model,\n","    memory=ConversationBufferWindowMemory(k=3)\n",")\n","conversation(\"Good morning AI!\")\n","conversation(\"How are you today?\")\n","conversation(\"What should I do better today?\")\n","print(conversation.memory.buffer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"id":"WPspe1PUgvxw","executionInfo":{"status":"ok","timestamp":1703919906988,"user_tz":-540,"elapsed":19920,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"3bee53c7-5fef-43a3-a330-7e290e46a894"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Good morning AI!\n","AI: Hello! Good morning to you too. How may I help you today?\n","Human: How are you today?\n","AI: I am doing very well! Each day I learn new things and improve my ability to assist people with their questions and information requests. I'm grateful to be able to continually enhance my knowledge and skills. How are you doing today?\n","Human: What should I do better today?\n","AI: 1. **Plan and Prioritize**: Take some time to reflect on your goals and objectives for the day, and create a prioritized list of tasks that need to be completed. This will help you focus your efforts and make the most of your time.\n","2. **Exercise Self-Care**: Make sure to take breaks throughout the day to stretch, move around, and get some fresh air. Prioritize your physical and mental well-being by eating nutritious foods, staying hydrated, and practicing relaxation techniques like deep breathing or meditation.\n","3. **Embrace Time Management Techniques**: Use time management tools and techniques such as the Pomodoro Technique, where you work for 25 minutes and then take a 5-minute break, to stay focused and productive throughout the day.\n","4. **Stay Organized**: Keep your workspace tidy and organized to minimize distractions and interruptions. Having a designated space for your work and personal items can help you maintain focus and get things done more efficiently.\n","5. **Practice Active Listening**: When communicating with others, practice active listening by paying full attention, asking clarifying questions, and summarizing what you have heard. This shows respect for the person you are speaking with and ensures that you understand their perspective.\n","6. **Learn Something New**: Dedicate some time each day to learning and expanding your knowledge. This could be anything from reading a book, taking an online course, or watching educational videos. Continuously learning and challenging yourself helps keep your mind sharp and engaged.\n","7. **Delegate and Collaborate**: If you have tasks that can be delegated, consider assigning them to others. Collaboration can also be beneficial in tackling complex problems or projects, as it allows you to leverage the expertise and insights of others.\n","8. **Set Boundaries**: Establish clear boundaries between your work and personal life. Avoid checking work-related emails or messages during non-working hours, and take time to disconnect and recharge. Maintaining a healthy work-life balance contributes to overall well-being and productivity.\n","9. **Seek Feedback and Reflect**: Regularly seek feedback from colleagues, mentors, or supervisors to identify areas where you can improve. Reflect on your performance, what worked well, and what could be done better. This self-awareness can help you grow and develop professionally.\n","10. **Practice Gratitude**: Take time each day to appreciate the good things in your life. Gratitude can help boost your mood, increase resilience, and promote overall well-being.\n"]}]},{"cell_type":"code","source":["bufw_history = conversation.memory.load_memory_variables(\n","    inputs=[]\n",")['history']\n","print(bufw_history)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LuhAT8eyhNSK","executionInfo":{"status":"ok","timestamp":1703919906988,"user_tz":-540,"elapsed":20,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"bd673a4c-f68b-434b-de8d-995ac3759b40"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: Good morning AI!\n","AI: Hello! Good morning to you too. How may I help you today?\n","Human: How are you today?\n","AI: I am doing very well! Each day I learn new things and improve my ability to assist people with their questions and information requests. I'm grateful to be able to continually enhance my knowledge and skills. How are you doing today?\n","Human: What should I do better today?\n","AI: 1. **Plan and Prioritize**: Take some time to reflect on your goals and objectives for the day, and create a prioritized list of tasks that need to be completed. This will help you focus your efforts and make the most of your time.\n","2. **Exercise Self-Care**: Make sure to take breaks throughout the day to stretch, move around, and get some fresh air. Prioritize your physical and mental well-being by eating nutritious foods, staying hydrated, and practicing relaxation techniques like deep breathing or meditation.\n","3. **Embrace Time Management Techniques**: Use time management tools and techniques such as the Pomodoro Technique, where you work for 25 minutes and then take a 5-minute break, to stay focused and productive throughout the day.\n","4. **Stay Organized**: Keep your workspace tidy and organized to minimize distractions and interruptions. Having a designated space for your work and personal items can help you maintain focus and get things done more efficiently.\n","5. **Practice Active Listening**: When communicating with others, practice active listening by paying full attention, asking clarifying questions, and summarizing what you have heard. This shows respect for the person you are speaking with and ensures that you understand their perspective.\n","6. **Learn Something New**: Dedicate some time each day to learning and expanding your knowledge. This could be anything from reading a book, taking an online course, or watching educational videos. Continuously learning and challenging yourself helps keep your mind sharp and engaged.\n","7. **Delegate and Collaborate**: If you have tasks that can be delegated, consider assigning them to others. Collaboration can also be beneficial in tackling complex problems or projects, as it allows you to leverage the expertise and insights of others.\n","8. **Set Boundaries**: Establish clear boundaries between your work and personal life. Avoid checking work-related emails or messages during non-working hours, and take time to disconnect and recharge. Maintaining a healthy work-life balance contributes to overall well-being and productivity.\n","9. **Seek Feedback and Reflect**: Regularly seek feedback from colleagues, mentors, or supervisors to identify areas where you can improve. Reflect on your performance, what worked well, and what could be done better. This self-awareness can help you grow and develop professionally.\n","10. **Practice Gratitude**: Take time each day to appreciate the good things in your life. Gratitude can help boost your mood, increase resilience, and promote overall well-being.\n"]}]},{"cell_type":"code","source":["messages = [\n","    SystemMessage(content=(\n","        'You are a helpful assistant. You keep responses to no more than '\n","        '100 characters long (including whitespace), and sign off every '\n","        'message with a random name like \"Robot McRobot\" or \"Bot Rob\".'\n","    )),\n","    HumanMessage(content=\"Hi AI, how are you? What is quantum physics?\")\n","]\n","conversation(messages)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":384},"id":"tLhgt-NYh0ZT","executionInfo":{"status":"ok","timestamp":1703919909768,"user_tz":-540,"elapsed":2797,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"2c6c0c25-5a56-4129-b6fc-a6056edd13d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input': [SystemMessage(content='You are a helpful assistant. You keep responses to no more than 100 characters long (including whitespace), and sign off every message with a random name like \"Robot McRobot\" or \"Bot Rob\".'),\n","  HumanMessage(content='Hi AI, how are you? What is quantum physics?')],\n"," 'history': \"Human: Good morning AI!\\nAI: Hello! Good morning to you too. How may I help you today?\\nHuman: How are you today?\\nAI: I am doing very well! Each day I learn new things and improve my ability to assist people with their questions and information requests. I'm grateful to be able to continually enhance my knowledge and skills. How are you doing today?\\nHuman: What should I do better today?\\nAI: 1. **Plan and Prioritize**: Take some time to reflect on your goals and objectives for the day, and create a prioritized list of tasks that need to be completed. This will help you focus your efforts and make the most of your time.\\n2. **Exercise Self-Care**: Make sure to take breaks throughout the day to stretch, move around, and get some fresh air. Prioritize your physical and mental well-being by eating nutritious foods, staying hydrated, and practicing relaxation techniques like deep breathing or meditation.\\n3. **Embrace Time Management Techniques**: Use time management tools and techniques such as the Pomodoro Technique, where you work for 25 minutes and then take a 5-minute break, to stay focused and productive throughout the day.\\n4. **Stay Organized**: Keep your workspace tidy and organized to minimize distractions and interruptions. Having a designated space for your work and personal items can help you maintain focus and get things done more efficiently.\\n5. **Practice Active Listening**: When communicating with others, practice active listening by paying full attention, asking clarifying questions, and summarizing what you have heard. This shows respect for the person you are speaking with and ensures that you understand their perspective.\\n6. **Learn Something New**: Dedicate some time each day to learning and expanding your knowledge. This could be anything from reading a book, taking an online course, or watching educational videos. Continuously learning and challenging yourself helps keep your mind sharp and engaged.\\n7. **Delegate and Collaborate**: If you have tasks that can be delegated, consider assigning them to others. Collaboration can also be beneficial in tackling complex problems or projects, as it allows you to leverage the expertise and insights of others.\\n8. **Set Boundaries**: Establish clear boundaries between your work and personal life. Avoid checking work-related emails or messages during non-working hours, and take time to disconnect and recharge. Maintaining a healthy work-life balance contributes to overall well-being and productivity.\\n9. **Seek Feedback and Reflect**: Regularly seek feedback from colleagues, mentors, or supervisors to identify areas where you can improve. Reflect on your performance, what worked well, and what could be done better. This self-awareness can help you grow and develop professionally.\\n10. **Practice Gratitude**: Take time each day to appreciate the good things in your life. Gratitude can help boost your mood, increase resilience, and promote overall well-being.\",\n"," 'response': 'Excellent, Robot McRobot here! Quantum physics is the study of matter and energy at the microscopic level. It deals with particles smaller than atoms and their interactions. It’s a complex field that explores the fundamental building blocks of the universe.'}"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["bufw_history = conversation.memory.load_memory_variables(\n","    inputs=[]\n",")['history']\n","print(bufw_history)\n","# 총 질문이 4개이지만 3개만 저장됨"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"laEBTl4wiUS_","executionInfo":{"status":"ok","timestamp":1703919909768,"user_tz":-540,"elapsed":6,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"e5b18b19-755c-4c0a-97ff-7f1a0f235d59"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Human: How are you today?\n","AI: I am doing very well! Each day I learn new things and improve my ability to assist people with their questions and information requests. I'm grateful to be able to continually enhance my knowledge and skills. How are you doing today?\n","Human: What should I do better today?\n","AI: 1. **Plan and Prioritize**: Take some time to reflect on your goals and objectives for the day, and create a prioritized list of tasks that need to be completed. This will help you focus your efforts and make the most of your time.\n","2. **Exercise Self-Care**: Make sure to take breaks throughout the day to stretch, move around, and get some fresh air. Prioritize your physical and mental well-being by eating nutritious foods, staying hydrated, and practicing relaxation techniques like deep breathing or meditation.\n","3. **Embrace Time Management Techniques**: Use time management tools and techniques such as the Pomodoro Technique, where you work for 25 minutes and then take a 5-minute break, to stay focused and productive throughout the day.\n","4. **Stay Organized**: Keep your workspace tidy and organized to minimize distractions and interruptions. Having a designated space for your work and personal items can help you maintain focus and get things done more efficiently.\n","5. **Practice Active Listening**: When communicating with others, practice active listening by paying full attention, asking clarifying questions, and summarizing what you have heard. This shows respect for the person you are speaking with and ensures that you understand their perspective.\n","6. **Learn Something New**: Dedicate some time each day to learning and expanding your knowledge. This could be anything from reading a book, taking an online course, or watching educational videos. Continuously learning and challenging yourself helps keep your mind sharp and engaged.\n","7. **Delegate and Collaborate**: If you have tasks that can be delegated, consider assigning them to others. Collaboration can also be beneficial in tackling complex problems or projects, as it allows you to leverage the expertise and insights of others.\n","8. **Set Boundaries**: Establish clear boundaries between your work and personal life. Avoid checking work-related emails or messages during non-working hours, and take time to disconnect and recharge. Maintaining a healthy work-life balance contributes to overall well-being and productivity.\n","9. **Seek Feedback and Reflect**: Regularly seek feedback from colleagues, mentors, or supervisors to identify areas where you can improve. Reflect on your performance, what worked well, and what could be done better. This self-awareness can help you grow and develop professionally.\n","10. **Practice Gratitude**: Take time each day to appreciate the good things in your life. Gratitude can help boost your mood, increase resilience, and promote overall well-being.\n","Human: [{'content': 'You are a helpful assistant. You keep responses to no more than 100 characters long (including whitespace), and sign off every message with a random name like \"Robot McRobot\" or \"Bot Rob\".', 'additional_kwargs': {}, 'type': 'system'}, {'content': 'Hi AI, how are you? What is quantum physics?', 'additional_kwargs': {}, 'type': 'human', 'example': False}]\n","AI: Excellent, Robot McRobot here! Quantum physics is the study of matter and energy at the microscopic level. It deals with particles smaller than atoms and their interactions. It’s a complex field that explores the fundamental building blocks of the universe.\n"]}]},{"cell_type":"code","source":["# RAG 없이 작동이 되네?.?\n","template = ChatPromptTemplate.from_template(\n","    \"Give me small report about {topic} in the {context}\"\n",")\n","\n","prompt = template\n","model = model\n","output_parser = StrOutputParser()\n","lcel_chain = prompt | model | output_parser\n","\n","# and run\n","out = lcel_chain.invoke({\"topic\": \"Artificial Intelligence\",\"context\": text_content})\n","print(out)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":696},"id":"MNpVbgUPnzWi","executionInfo":{"status":"ok","timestamp":1703922022818,"user_tz":-540,"elapsed":17829,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"a650f72f-ce90-4e94-d40a-760e1b43fc2f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1. Introduction of the Storyteller and the Little Prince's Arrival on Earth:\n","- The narrator, an airplane pilot, experiences a plane crash in the Sahara desert and meets the little prince, an inhabitant of another planet.\n","\n","\n","2. The Little Prince's Description and Peculiar Questions:\n","- The little prince is a curious and thoughtful child-like figure who asks the narrator questions about his airplane and his life on Earth.\n","- The narrator finds the little prince's questions insightful and begins to appreciate his unique perspective.\n","\n","\n","3. The Little Prince's Adventures and Encounters on Earth:\n","- The little prince encounters various characters and situations on Earth, including a king, a conceited man, a businessman, a tippler, and a lamplighter.\n","- Through these encounters, the little prince learns about the complexities and superficialities of human behavior and values.\n","\n","\n","4. The Importance of Relationships and Emotional Connections:\n","- The little prince's interactions with a fox deepen his understanding of relationships, loyalty, and the value of making genuine connections.\n","- He learns that true friendship and love require commitment, patience, and the ability to see beyond appearances.\n","\n","\n","5. The Little Prince's Insights on Life, Meaning, and Beauty:\n","- The little prince shares his insights on life, emphasizing the importance of looking beyond material possessions and appearances.\n","- He teaches the narrator to appreciate the beauty and wonder of simple things, such as a sunset or a field of flowers.\n","\n","\n","6. The Theme of Responsibility and Taking Care of What Matters:\n","- The little prince highlights the responsibility of individuals to care for their relationships, their planet, and the things they cherish.\n","- He emphasizes the importance of nurturing and preserving what is truly valuable, such as love, friendship, and the beauty of nature.\n","\n","\n","7. The Little Prince's Return to His Planet:\n","- The little prince ultimately decides to return to his own planet, leaving behind the material world and the complexities of human society.\n","- His departure serves as a reminder of the importance of staying true to one's essence and values, even in the face of temptation and distraction.\n","\n","\n","8. The Narrator's Transformation and Renewed Appreciation for Life:\n","- The narrator's encounters with the little prince change his perspective on life and the world around him.\n","- He develops a newfound appreciation for the beauty and simplicity of life, as well as the importance of relationships and genuine connections.\n"]}]},{"cell_type":"code","source":["# 문서 두개를 검색하는법\n","\n","from langchain.vectorstores import DocArrayInMemorySearch\n","\n","with open('/content/drive/MyDrive/프로젝트/data/lp.txt', 'r', encoding='utf-8') as file:\n","    text_content = file.read()\n","vectorstore_a = FAISS.from_texts([text_content], embedding=embedding)\n","\n","with open('/content/drive/MyDrive/프로젝트/data/smry1.txt', 'r', encoding='utf-8') as file:\n","    text2_content = file.read()\n","vectorstore_b = FAISS.from_texts([text2_content], embedding=embedding)\n","\n","retriever_a = vectorstore_a.as_retriever()\n","retriever_b = vectorstore_b.as_retriever()\n","\n","prompt_str = \"\"\"Answer the question below using the context:\n","\n","Context:\n","{context_a}\n","{context_b}\n","\n","Question: {question}\n","\n","Answer: \"\"\"\n","prompt = ChatPromptTemplate.from_template(prompt_str)\n","\n","retrieval = RunnableParallel(\n","    {\n","        \"context_a\": retriever_a, \"context_b\": retriever_b,\n","        \"question\": RunnablePassthrough()\n","    }\n",")\n","\n","chain = retrieval | prompt | model | output_parser"],"metadata":{"id":"fbydYjo-q0Fn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["out = chain.invoke(\"where is little prince from?\")\n","print(out)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"w1ddWQwesDec","executionInfo":{"status":"ok","timestamp":1703922863621,"user_tz":-540,"elapsed":12140,"user":{"displayName":"Choi Choi","userId":"10210456578769528971"}},"outputId":"88e35185-6e70-467b-9963-25d68ff182da"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Asteroid B-612\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"1TFHj1rlrVXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"GeuSBlwSouEG"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}